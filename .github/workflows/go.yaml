name: Go

on:
  push:
    branches: ['*', '*/*']
    tags: ['v*']
  pull_request:
    branches: ['*']

permissions:
  contents: read

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.2
  test:
    name: test
    strategy:
      matrix:
        go: ["1.19.x", "1.22.x", "1.23.x"]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        with:
          go-version: ${{ matrix.go }}
        uses: actions/setup-go@v2

      - uses: actions/checkout@v2

      - name: Test
        run: make cover

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v3

  test-os:
    name: test-os
    strategy:
      matrix:
        go: ["1.19.x", "1.22.x", "1.23.x"]
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Go
        with:
          go-version: ${{ matrix.go }}
        uses: actions/setup-go@v2

      - uses: actions/checkout@v2

      - name: Test
        run: |
          go test ./... -run=TestPersistOS
          go test ./... -run=TestHybridCacheGetSetNoRace
          go test ./... -run=TestNvmResize

  build-os:
    name: build-os
    strategy:
      matrix:
        go: ["1.19.x", "1.22.x", "1.23.x"]
        os: [darwin, windows, freebsd, solaris, illumos, openbsd, plan9]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        with:
          go-version: ${{ matrix.go }}
        uses: actions/setup-go@v2

      - uses: actions/checkout@v2

      - name: Build
        run: GOOS=${{ matrix.os }} CGO_ENABLED=0 go build
